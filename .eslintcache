[{"/Users/yoelmolinas/Projects/Tutorial/chat-widget/src/components/ChatWidget/tokens.js":"1","/Users/yoelmolinas/Projects/Tutorial/chat-widget/src/Config.js":"2","/Users/yoelmolinas/Projects/Tutorial/chat-widget/src/App.js":"3","/Users/yoelmolinas/Projects/Tutorial/chat-widget/src/index.js":"4","/Users/yoelmolinas/Projects/Tutorial/chat-widget/src/components/ChatWidget/index.js":"5","/Users/yoelmolinas/Projects/Tutorial/chat-widget/src/components/ChatWidget/Chat.js":"6","/Users/yoelmolinas/Projects/Tutorial/chat-widget/src/components/ChatWidget/styled/index.js":"7","/Users/yoelmolinas/Projects/Tutorial/chat-widget/src/utils/day/index.js":"8","/Users/yoelmolinas/Projects/Tutorial/chat-widget/src/icons/index.js":"9","/Users/yoelmolinas/Projects/Tutorial/chat-widget/src/components/ChatWidget/Welcome.js":"10","/Users/yoelmolinas/Projects/Tutorial/chat-widget/src/components/ChatWidget/Settings.js":"11","/Users/yoelmolinas/Projects/Tutorial/chat-widget/src/GlobalStyle.js":"12"},{"size":1382,"mtime":1610841159956,"results":"13","hashOfConfig":"14"},{"size":236,"mtime":1610920465918,"results":"15","hashOfConfig":"14"},{"size":1091,"mtime":1610920452358,"results":"16","hashOfConfig":"14"},{"size":372,"mtime":1610839196155,"results":"17","hashOfConfig":"14"},{"size":7778,"mtime":1610920503991,"results":"18","hashOfConfig":"14"},{"size":3681,"mtime":1610909860936,"results":"19","hashOfConfig":"14"},{"size":13402,"mtime":1610920792502,"results":"20","hashOfConfig":"14"},{"size":4416,"mtime":1609829706749,"results":"21","hashOfConfig":"14"},{"size":831,"mtime":1610920256178,"results":"22","hashOfConfig":"14"},{"size":3625,"mtime":1610913718513,"results":"23","hashOfConfig":"14"},{"size":3651,"mtime":1610913722574,"results":"24","hashOfConfig":"14"},{"size":518,"mtime":1610909557728,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"16klvty",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},"/Users/yoelmolinas/Projects/Tutorial/chat-widget/src/components/ChatWidget/tokens.js",["56"],"export default {\n  width: { desktop: \"400px\", mobile: \"100%\" },\n  height: { desktop: \"800px\", mobile: \"100%\" },\n  palette: {\n    none: \"rgba(0, 0, 0, 0)\",\n    black: \"#000000\",\n    dark: \"#35363A\",\n    darkgrey: \"#656565\",\n    grey: \"#ABABAB\",\n    lightgrey: \"#E5E5E5\",\n    white: \"#FFFFFF\",\n    green: \"#8BF9A3\",\n    purple: \"#A492ED\",\n    darkpurple: \"#8776CA\",\n    darkerpurple: \"#5B4B97\",\n    blue: \"#3876EF\",\n  },\n  border: {\n    \"bo+0\": \"0px\",\n    \"bo+1\": \"2px\",\n    \"bo+2\": \"4px\",\n  },\n  radius: {\n    \"ra+0\": \"0px\",\n    \"ra+1\": \"8px\",\n    \"ra+2\": \"32px\",\n  },\n  padding: {\n    \"sp+0\": \"0px\",\n    \"sp+0.5\": \"6px\",\n    \"sp+1\": \"8px\",\n    \"sp+2\": \"16px\",\n    \"sp+3\": \"32px\",\n  },\n  margin: {\n    \"sp+0\": \"0px\",\n    \"sp+0.5\": \"6px\",\n    \"sp+1\": \"8px\",\n    \"sp+2\": \"16px\",\n    \"sp+3\": \"32px\",\n  },\n  iconscale: {\n    \"sc-2\": \"14px\",\n    \"sc-1\": \"18px\",\n    \"sc+0\": \"24px\",\n    \"sc+1\": \"32px\",\n    \"sc+2\": \"48px\",\n  },\n  symbolscale: {\n    \"sc+0\": \"32px\",\n  },\n  font: {\n    regular: \"Quicksand\",\n    // regular: \"Bodoni Moda\",\n    // regular: \"Inter\",\n  },\n  fontsize: {\n    extrasmall: \"14px\",\n    small: \"18px\",\n    medium: \"22px\",\n    large: \"28px\",\n  },\n  fontweight: {\n    regular: \"medium\",\n    bold: \"bold\",\n  },\n  fontlineheight: {\n    extrasmall: \"17px\",\n    small: \"22px\",\n    medium: \"27px\",\n    large: \"35px\",\n  },\n  screens: { welcome: 1, chat: 2, settings: 3 },\n};\n","/Users/yoelmolinas/Projects/Tutorial/chat-widget/src/Config.js",["57"],"/Users/yoelmolinas/Projects/Tutorial/chat-widget/src/App.js",[],"/Users/yoelmolinas/Projects/Tutorial/chat-widget/src/index.js",[],["58","59"],"/Users/yoelmolinas/Projects/Tutorial/chat-widget/src/components/ChatWidget/index.js",["60","61","62","63","64"],"/Users/yoelmolinas/Projects/Tutorial/chat-widget/src/components/ChatWidget/Chat.js",["65"],"import React, { useState, useRef, useEffect, Fragment } from \"react\";\n\nimport {\n  Flash,\n  FadeIn,\n  BottomBar,\n  ChatContainer,\n  ChatContainerChild,\n  TextMessage,\n  Icon,\n  Text,\n  TextInput,\n  Separator,\n  Row,\n} from \"./styled\";\n\nimport { useChatWidget } from \"./index\";\n\nconst Chat = (props) => {\n  const chatWidget = useChatWidget();\n\n  const listRef = useRef(null);\n  const scrollToEnd = (el = listRef.current) => {\n    if (el) {\n      setTimeout(() => {\n        el.scrollTop = el.scrollHeight + 100;\n      }, 200);\n    }\n  };\n\n  useEffect(() => {\n    scrollToEnd();\n  }, []);\n\n  return (\n    <>\n      <Separator palette=\"darkgrey\" border=\"bo+1\" />\n      <ChatContainer ref={listRef}>\n        <ChatContainerChild>\n          <Separator spacing=\"sp+1\" />\n          {chatWidget.messages.map((m, i) => {\n            let onlybody = false;\n            let noseparator = false;\n            if (i > 0) {\n              onlybody =\n                chatWidget.messages[i - 1].sender.name === m.sender.name;\n            }\n            if (i < chatWidget.messages.length - 1) {\n              noseparator =\n                chatWidget.messages[i + 1].sender.name === m.sender.name;\n            }\n            return (\n              <Fragment key={`message-${i}`}>\n                <FadeIn>\n                  <TextMessage message={m} onlybody={onlybody}></TextMessage>\n                  {!noseparator && <Separator spacing=\"sp+1\" />}\n                </FadeIn>\n              </Fragment>\n            );\n          })}\n        </ChatContainerChild>\n      </ChatContainer>\n\n      <Separator palette=\"darkgrey\" border=\"bo+1\" />\n\n      <BottomBar>\n        <TextInput\n          placeholder=\"type and enter\"\n          value={chatWidget.message}\n          onChange={(event) => {\n            chatWidget.setMessage(event.target.value);\n            // send typing signal if not in whoIsTypingList\n            if (event.target.value === \"\") chatWidget.sendTypingSignal(false);\n            else if (\n              !chatWidget.whoIsTyping.current.includes(chatWidget.userId)\n            )\n              chatWidget.sendTypingSignal(true);\n          }}\n          onSubmit={(val) => {\n            // publish message\n            chatWidget.sendMessage({\n              message: {\n                type: \"text\",\n                sender: {\n                  id: chatWidget.userId,\n                  name: chatWidget.username,\n                  image: chatWidget.avatar,\n                },\n                text: val,\n                createdAt: new Date(),\n              },\n              callback: () => {\n                scrollToEnd();\n              },\n            });\n          }}\n          action={{\n            icon: \"donate\",\n            title: \"donate\",\n            palette: \"white\",\n            activepalette: \"grey\",\n            onClick: (e) => {\n              console.log(\"Donate!\");\n            },\n          }}\n        />\n        <Separator spacing=\"sp+1\" />\n\n        <Row>\n          {chatWidget.personTyping && (\n            <FadeIn>\n              <Text\n                font=\"regular\"\n                size=\"extrasmall\"\n                palette=\"grey\"\n                align=\"center\"\n              >\n                <Flash>{chatWidget.personTyping} is typing...</Flash>\n              </Text>\n            </FadeIn>\n          )}\n          {!chatWidget.personTyping && (\n            <FadeIn>\n              <Text size=\"extrasmall\"> made with &nbsp; </Text>\n              <Icon name=\"heart\" scale=\"sc-1\" />\n              <Text size=\"extrasmall\">&nbsp; by motelciler</Text>\n            </FadeIn>\n          )}\n        </Row>\n        <Separator spacing=\"sp+1\" />\n      </BottomBar>\n    </>\n  );\n};\n\nexport default Chat;\n","/Users/yoelmolinas/Projects/Tutorial/chat-widget/src/components/ChatWidget/styled/index.js",["66","67","68","69","70","71","72","73","74","75"],"/Users/yoelmolinas/Projects/Tutorial/chat-widget/src/utils/day/index.js",["76"],"import { isObject } from \"@doubco/wtf\";\nimport dayjs from \"dayjs\";\nimport localizedFormat from \"dayjs/plugin/localizedFormat\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\nimport isBetween from \"dayjs/plugin/isBetween\";\n\nimport en_gb from \"dayjs/locale/en-gb\";\nimport tr from \"dayjs/locale/tr\";\n\ndayjs.extend(customParseFormat);\ndayjs.extend(localizedFormat);\ndayjs.extend(relativeTime);\ndayjs.extend(isBetween);\nclass Day {\n  constructor(props) {\n    const en = dayjs.en;\n\n    this.instance = dayjs;\n\n    // console.log(\"this.localeData\", this.localeData);\n    this.localeDatas = {\n      en,\n      en_gb,\n    };\n    this.localeData = this.localeDatas.en;\n  }\n\n  getCurrentLocale() {\n    return this.localeData.name;\n  }\n\n  day(...args) {\n    return this.instance(...args).locale(this.getCurrentLocale());\n  }\n\n  format(date, f, options = {}) {\n    let format = f;\n\n    if (format) {\n      Object.keys(this.localeData.formats).forEach((k) => {\n        format = format.replace(new RegExp(k), this.localeData.formats[k]);\n      });\n    }\n\n    return this.day(date).format(format);\n  }\n\n  formatDistance(date, from, options = { isRaw: false }) {\n    return this.day(date).from(from, options.isRaw);\n  }\n\n  toDate(date, options = {}) {\n    let opts = { ...options };\n\n    if (opts.format) {\n      Object.keys(this.localeData.formats).forEach((k) => {\n        opts.format = opts.format.replace(\n          new RegExp(k),\n          this.localeData.formats[k]\n        );\n      });\n    }\n    // console.log(\"toDate\", this.day(date, opts).toDate());\n    return this.day(date, opts).toDate();\n  }\n\n  toJSON(date, options = {}) {\n    return this.day(date, options).toJSON();\n  }\n\n  isValid(date, options = {}) {\n    return this.day(date, options).isValid();\n  }\n\n  date(date, options = {}) {\n    return this.day(date).date();\n  }\n\n  diff(date, compared, unit, options = {}) {\n    return this.day(date).diff(compared, unit, options.float);\n  }\n\n  weekday(date, options = {}) {\n    return this.day(date).day();\n  }\n\n  month(date, options = {}) {\n    return this.day(date).month();\n  }\n\n  year(date, options = {}) {\n    return this.day(date).year();\n  }\n\n  hour(date, options = {}) {\n    return this.day(date).hour();\n  }\n\n  minute(date, options = {}) {\n    return this.day(date).minute();\n  }\n\n  daysInMonth(date, options = {}) {\n    return this.day(date).daysInMonth();\n  }\n\n  set(unit, date, value, options = {}) {\n    return this.day(date).set(unit, value);\n  }\n\n  add(unit, date, value, options = {}) {\n    return this.day(date).add(value, unit);\n  }\n\n  subtract(unit, date, value, options = {}) {\n    return this.day(date).subtract(value, unit);\n  }\n\n  isBetween(date, start, end, options = { type: null }) {\n    return this.day(date).isBetween(start, end, options.type);\n  }\n\n  getFormat(format, options = {}) {\n    return this.localeData.formats[format];\n  }\n\n  getLocaleData(locale = this.getCurrentLocale(), options = {}) {\n    return this.localeDatas[locale];\n  }\n\n  getWeekdays(i) {\n    return this.localeData.weekdays[i] || \"\";\n  }\n\n  getWeekdaysShort(i) {\n    return this.localeData.weekdaysShort\n      ? this.localeData.weekdaysShort[i]\n      : this.getWeekdays(i).substr(0, 3);\n  }\n\n  getFormatAsArray() {\n    let data = this.localeData;\n    let date = [];\n    let time = [\"h\", \"m\"];\n    let l = data.formats[\"L\"];\n    let lt = data.formats[\"LT\"];\n    l = l.toLowerCase().replace(/-/g, \".\").replace(/\\//g, \".\");\n    date = l.split(\".\").map((i) => i.substr(0, 1));\n\n    if (lt.includes(\"A\")) {\n      time.push(\"a\");\n    }\n\n    return {\n      date,\n      time,\n    };\n  }\n\n  createContext(locale) {\n    return this.localeDatas[locale];\n  }\n\n  registerContext(context) {\n    if (context) {\n      this.localeData = context;\n      this.localeDatas[context.name] = context;\n      this.instance.locale(context);\n    }\n  }\n\n  locale(locale, callback) {\n    if (isObject(locale)) {\n      this.localeData = locale;\n      this.localeDatas[locale.name] = locale;\n      this.instance.locale(locale);\n      if (callback) callback();\n    } else {\n      if (this.localeDatas[locale]) {\n        this.localeData = this.localeDatas[locale];\n        if (callback) callback();\n      } else {\n        this.localeDatas[locale] = this.localeData;\n        this.instance.locale(locale);\n        if (callback) callback();\n      }\n    }\n  }\n}\n\nexport default new Day();\n","/Users/yoelmolinas/Projects/Tutorial/chat-widget/src/icons/index.js",["77"],"/Users/yoelmolinas/Projects/Tutorial/chat-widget/src/components/ChatWidget/Welcome.js",["78","79","80","81"],"/Users/yoelmolinas/Projects/Tutorial/chat-widget/src/components/ChatWidget/Settings.js",["82","83","84"],"import React, { useEffect, useState } from \"react\";\nimport {\n  TopBar,\n  WelcomeContainer,\n  TextInput,\n  GridSelectImage,\n  Button,\n  Icon,\n  Text,\n  Separator,\n} from \"./styled\";\nimport tokens from \"./tokens\";\n\nimport { useChatWidget } from \"./index\";\n\nconst Settings = (props) => {\n  const chatWidget = useChatWidget();\n  const [username, setUsername] = useState(chatWidget.username);\n  const [avatar, setAvatar] = useState(chatWidget.avatar);\n\n  const [inputsValid, setInputsValid] = useState({\n    username: chatWidget.isUsernameValid(username),\n    avatar: true,\n  });\n\n  useEffect(() => {\n    // Change this part by checking if current\n    // username is valid\n    if (chatWidget.isUsernameValid(username)) {\n      setInputsValid((d) => {\n        return { ...d, username: true };\n      });\n    } else {\n      setInputsValid((d) => {\n        return { ...d, username: false };\n      });\n    }\n  }, [username]);\n\n  return (\n    <>\n      <WelcomeContainer>\n        <Text size=\"small\" weight=\"bold\">\n          update a username and avatar.\n        </Text>\n        <Separator spacing=\"sp+1\" />\n        <TextInput\n          placeholder=\"your username\"\n          value={username}\n          onChange={(event) => {\n            setUsername(event.target.value);\n          }}\n          onSubmit={(val) => {}}\n          action={\n            inputsValid.username\n              ? {\n                  icon: \"check-circle\",\n                  palette: \"green\",\n                }\n              : {\n                  icon: \"circle\",\n                  palette: \"white\",\n                }\n          }\n        />\n        <Separator spacing=\"sp+1\" />\n        <GridSelectImage\n          images={[\n            process.env.PUBLIC_URL + \"/profiles/profiles-1.png\",\n            process.env.PUBLIC_URL + \"/profiles/profiles-2.png\",\n            process.env.PUBLIC_URL + \"/profiles/profiles-3.png\",\n            process.env.PUBLIC_URL + \"/profiles/profiles-4.png\",\n            process.env.PUBLIC_URL + \"/profiles/profiles-1.png\",\n            process.env.PUBLIC_URL + \"/profiles/profiles-2.png\",\n            process.env.PUBLIC_URL + \"/profiles/profiles-3.png\",\n            process.env.PUBLIC_URL + \"/profiles/profiles-4.png\",\n          ]}\n          action={\n            inputsValid.avatar\n              ? {\n                  icon: \"check-circle\",\n                  palette: \"green\",\n                }\n              : {\n                  icon: \"circle\",\n                  palette: \"white\",\n                }\n          }\n          value={avatar}\n          onSelect={(url) => {\n            setAvatar(url);\n            setInputsValid((d) => {\n              return { ...d, avatar: true };\n            });\n          }}\n        />\n        <Separator spacing=\"sp+1\" />\n\n        <Button\n          style={{ width: \"100%\" }}\n          padding=\"sp+2\"\n          palette={\n            inputsValid.username && inputsValid.avatar ? \"purple\" : \"grey\"\n          }\n          hoverpalette={\n            inputsValid.username && inputsValid.avatar ? \"darkpurple\" : \"grey\"\n          }\n          activepalette={\n            inputsValid.username && inputsValid.avatar ? \"darkerpurple\" : \"grey\"\n          }\n          onClick={\n            inputsValid.username && inputsValid.avatar\n              ? (e) => {\n                  chatWidget.setAvatar(avatar);\n                  chatWidget.setUsername(username);\n                  chatWidget.setScreen(tokens.screens.chat);\n                }\n              : null\n          }\n        >\n          <Text size=\"small\" weight=\"bold\">\n            save and return\n          </Text>\n        </Button>\n      </WelcomeContainer>\n    </>\n  );\n};\n\nexport default Settings;\n","/Users/yoelmolinas/Projects/Tutorial/chat-widget/src/GlobalStyle.js",["85"],"import styled, { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n    // default font face\n    // @import url(\"https://fonts.googleapis.com/css2?family=Bodoni+Moda:wght@500;700&display=swap\");\n    // font-family: 'Bodoni Moda' serif;\n    \n    @import url(\"https://fonts.googleapis.com/css2?family=Quicksand:wght@500;700&display=swap\");\n    font-family: 'Quicksand' serif;\n\n    // remove button outline\n    button {\n        outline: 0;\n    }\n\n    input {\n        outline: 0;\n    }\n  \n`;\n",{"ruleId":"86","severity":1,"message":"87","line":1,"column":1,"nodeType":"88","endLine":74,"endColumn":3},{"ruleId":"86","severity":1,"message":"87","line":1,"column":1,"nodeType":"88","endLine":8,"endColumn":3},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":49,"column":20,"nodeType":"95","messageId":"96","endLine":49,"endColumn":31},{"ruleId":"97","severity":1,"message":"98","line":134,"column":6,"nodeType":"99","endLine":134,"endColumn":24,"suggestions":"100"},{"ruleId":"97","severity":1,"message":"101","line":138,"column":6,"nodeType":"99","endLine":138,"endColumn":16,"suggestions":"102"},{"ruleId":"97","severity":1,"message":"103","line":177,"column":6,"nodeType":"99","endLine":177,"endColumn":43,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":220,"column":34,"nodeType":"107","messageId":"108","endLine":220,"endColumn":36},{"ruleId":"93","severity":1,"message":"109","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"110","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":23},{"ruleId":"93","severity":1,"message":"111","line":1,"column":35,"nodeType":"95","messageId":"96","endLine":1,"endColumn":44},{"ruleId":"112","severity":1,"message":"113","line":224,"column":5,"nodeType":"114","messageId":"115","endLine":224,"endColumn":42},{"ruleId":"93","severity":1,"message":"116","line":537,"column":7,"nodeType":"95","messageId":"96","endLine":537,"endColumn":19},{"ruleId":"105","severity":1,"message":"106","line":544,"column":39,"nodeType":"107","messageId":"108","endLine":544,"endColumn":41},{"ruleId":"105","severity":1,"message":"106","line":546,"column":30,"nodeType":"107","messageId":"108","endLine":546,"endColumn":32},{"ruleId":"93","severity":1,"message":"117","line":577,"column":11,"nodeType":"95","messageId":"96","endLine":577,"endColumn":17},{"ruleId":"93","severity":1,"message":"118","line":577,"column":19,"nodeType":"95","messageId":"96","endLine":577,"endColumn":23},{"ruleId":"93","severity":1,"message":"119","line":577,"column":25,"nodeType":"95","messageId":"96","endLine":577,"endColumn":30},{"ruleId":"93","severity":1,"message":"120","line":577,"column":32,"nodeType":"95","messageId":"96","endLine":577,"endColumn":40},{"ruleId":"93","severity":1,"message":"121","line":9,"column":8,"nodeType":"95","messageId":"96","endLine":9,"endColumn":10},{"ruleId":"86","severity":1,"message":"87","line":12,"column":1,"nodeType":"88","endLine":23,"endColumn":3},{"ruleId":"93","severity":1,"message":"110","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":23},{"ruleId":"93","severity":1,"message":"122","line":3,"column":3,"nodeType":"95","messageId":"96","endLine":3,"endColumn":9},{"ruleId":"93","severity":1,"message":"123","line":7,"column":3,"nodeType":"95","messageId":"96","endLine":7,"endColumn":7},{"ruleId":"97","severity":1,"message":"124","line":37,"column":6,"nodeType":"99","endLine":37,"endColumn":16,"suggestions":"125"},{"ruleId":"93","severity":1,"message":"122","line":3,"column":3,"nodeType":"95","messageId":"96","endLine":3,"endColumn":9},{"ruleId":"93","severity":1,"message":"123","line":8,"column":3,"nodeType":"95","messageId":"96","endLine":8,"endColumn":7},{"ruleId":"97","severity":1,"message":"124","line":38,"column":6,"nodeType":"99","endLine":38,"endColumn":16,"suggestions":"126"},{"ruleId":"93","severity":1,"message":"127","line":1,"column":8,"nodeType":"95","messageId":"96","endLine":1,"endColumn":14},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'setChannels' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'channel', 'handlePresence', and 'handleSignal'. Either include them or remove the dependency array.","ArrayExpression",["130"],"React Hook useEffect has a missing dependency: 'collapsed'. Either include it or remove the dependency array.",["131"],"React Hook useEffect has missing dependencies: 'channel' and 'pubnub'. Either include them or remove the dependency array.",["132"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'MessageImage' is assigned a value but never used.","'sender' is assigned a value but never used.","'text' is assigned a value but never used.","'image' is assigned a value but never used.","'onlybody' is assigned a value but never used.","'tr' is defined but never used.","'TopBar' is defined but never used.","'Icon' is defined but never used.","React Hook useEffect has a missing dependency: 'chatWidget'. Either include it or remove the dependency array.",["133"],["134"],"'styled' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"141","fix":"143"},"Update the dependencies array to be: [pubnub, channels, handlePresence, handleSignal, channel]",{"range":"144","text":"145"},"Update the dependencies array to be: [collapsed, messages]",{"range":"146","text":"147"},"Update the dependencies array to be: [username, avatar, userId, collapsed, pubnub, channel]",{"range":"148","text":"149"},"Update the dependencies array to be: [chatWidget, username]",{"range":"150","text":"151"},{"range":"152","text":"151"},[3826,3844],"[pubnub, channels, handlePresence, handleSignal, channel]",[3948,3958],"[collapsed, messages]",[4996,5033],"[username, avatar, userId, collapsed, pubnub, channel]",[889,899],"[chatWidget, username]",[903,913]]